#!/bin/sh /etc/rc.common
USE_PROCD=1

START=99
STOP=21

APP_NAME='bilihp_router'
CONF_NAME="conf.ini"
CONF_MD5="conf.md5"

DIR_PATH='/tmp/bilihp/'
APP_PATH="$DIR_PATH""$APP_NAME"
CONF_PATH="$DIR_PATH""$CONF_NAME"
CONF_MD5_PATH="$DIR_PATH""$CONF_MD5"

LOG_SCRIPT="/usr/share/bilihp/bilihp_log_limit.sh"
UPDATE_SCRIPT="/usr/share/bilihp/bilihp_update.sh"
MONTIOR_SCRIPT="/usr/share/bilihp/bilihp_monitor.sh"

start_service() {
	if ps -w | grep '/tmp/bilihp' | grep -v 'grep' >/dev/null; then
		stop_service
	fi
	config_load 'bilihp'
	local enable=0

	config_get_bool enable conf enable
	[ "$enable" != 1 ] && return 0

	local name
	local password
	local platforms
	local base_urls
	local custom
	config_get name conf name
	config_get password conf password
	config_get platforms conf platforms
	config_get base_urls conf base_urls
	config_get custom conf custom

	[ -d $DIR_PATH ] || mkdir $DIR_PATH

	touch $APP_PATH

	custom=$(eval echo ${custom})
	if [ -n "$custom" ]; then
		wget $custom --no-check-certificate --connect-timeout=5 -t 3 -q -O $APP_PATH
	else
		[[ "$platforms" == 'auto' || -z "$platforms" ]] && select_platforms

		base_urls=$(eval echo ${base_urls})
		if [ -z "$base_urls" ]; then
			base_urls='https://pandorabox.tuuz.cc:444/app/ https://op.lingyan8.com/app/'
			uci set bilihp.conf.base_urls='https://pandorabox.tuuz.cc:444/app/'
			uci add_list bilihp.conf.base_urls='https://op.lingyan8.com/app/'
		fi
		# download c2c
		local down_shell=''
		local base_url
		for url in $base_urls; do
			echo $url | grep -qE '.*/$' || url="${url}/"
			down_shell="${down_shell} || { wget ${url}${platforms} --no-check-certificate --connect-timeout=5 -t 1 -q -O ${APP_PATH} && base_url=${url}; }"
		done
		eval "${down_shell:3}"
	fi

	echo -e "[c2c]\nname = $name\npassword = $password" >"$CONF_PATH"

	local filesize
	filesize=$(ls -l $APP_PATH | awk '{ print $5 }')
	if [ $filesize -le 0 ]; then
		logger -s -t bilihp "donwload bilihp error!"
		touch "${DIR_PATH}downerr"
		"$MONTIOR_SCRIPT" "$APP_PATH" "$CONF_PATH" "$CONF_MD5_PATH" >/dev/null 2>&1 &
		return 0
	fi
	chmod +x $APP_PATH

	local log=0
	config_get_bool log conf log

	local log_path="$DIR_PATH""bilihp.log"
	local logsize
	config_get logsize conf logsize
	if [ "$log" == 1 ]; then
		[ "$logsize" -gt 0 ] || logsize=64
		uci set bilihp.conf.logsize="$logsize"
		cd "$DIR_PATH" && "$APP_PATH" >>"$log_path" 2>&1 &
		# run bilihp_log_limit
		"$LOG_SCRIPT" "$log_path" "$logsize" >/dev/null 2>&1 &
	else
		echo "Logging is not enabled!" >"$log_path"
		cd "$DIR_PATH" && "$APP_PATH" >/dev/null 2>&1 &
	fi
	uci commit bilihp
	# run bilihp_monitor
	"$MONTIOR_SCRIPT" "$APP_PATH" "$CONF_PATH" "$CONF_MD5_PATH" >/dev/null 2>&1 &
	# run biluhp_update
	[ -n "$custom" ] || "$UPDATE_SCRIPT" "$DIR_PATH" "$platforms" "$base_url" >/dev/null 2>&1 &
}

stop_service() {
	kill -9 $(busybox ps -w | grep $MONTIOR_SCRIPT | grep -v grep | awk '{print $1}') >/dev/null 2>&1
	kill -9 $(busybox ps -w | grep $UPDATE_SCRIPT | grep -v grep | awk '{print $1}') >/dev/null 2>&1
	kill -9 $(busybox ps -w | grep $LOG_SCRIPT | grep -v grep | awk '{print $1}') >/dev/null 2>&1
	kill -9 $(busybox ps -w | grep $APP_PATH | grep -v grep | awk '{print $1}') >/dev/null 2>&1
	[ -d $DIR_PATH ] && rm -rf $DIR_PATH
}

# restart_service() {
# 	stop_service
# 	start_service
# }

select_platforms() {
	local cpu_platforms=$(uname -m)
	if [ -z "${cpu_platforms##*x86_64*}" ]; then
		platforms="c2c_linux"
	elif [ -z "${cpu_platforms##*x86*}" ]; then
		platforms="c2c_32_linux"
	elif [ -z "${cpu_platforms##*arm*}" ]; then
		platforms="c2c_arm_linux"
	elif [ -z "${cpu_platforms##*aarch*}" ]; then
		platforms="c2c_arm_linux"
	else
		platforms="c2c_router_linux"
	fi
	uci set bilihp.conf.platforms="$platforms"
}
